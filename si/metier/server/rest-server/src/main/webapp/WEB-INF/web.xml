<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         metadata-complete="true" id="rest-server" version="3.0">

  <display-name>Serveur Service Metier REST</display-name>
  <context-param>
    <param-name>webAppRootKey</param-name>
    <param-value>rest-server</param-value>
  </context-param>

  <context-param>
    <param-name>log4jConfiguration</param-name>
    <!--<param-value>classpath:rest-server-log4j.xml</param-value>-->
    <param-value>rest-server-log4j.xml</param-value>
    <!--<param-value>rest-server-log4j-4dev.xml</param-value>-->
  </context-param>
  <!--<context-param>-->
    <!--<param-name>log4jConfiguration</param-name>-->
    <!--<param-value>file:D://workspaces/jetBRAINS/tomcat-conf-IntelliJ/conf/additional-conf/rest-server-log4j.xml</param-value>-->
  <!--</context-param>-->

  <!-- The definition of the Root Spring Container shared by all Servlets and Filters -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>/WEB-INF/spring/root-context.xml</param-value>
  </context-param>
  <filter>
    <filter-name>springSecurityFilterChain</filter-name>
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>springSecurityFilterChain</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <filter>
    <filter-name>monitoring</filter-name>
    <filter-class>net.bull.javamelody.MonitoringFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>monitoring</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <!-- Creates the Spring Container shared by all Servlets and Filters -->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

  <listener>
    <listener-class>net.bull.javamelody.SessionListener</listener-class>
  </listener>

  <!-- Jersey Servlet -->
  <servlet>
    <servlet-name>jersey-servlet</servlet-name>
    <servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>
    <init-param>
      <param-name>jersey.config.server.provider.packages</param-name>
      <param-value>
        fr.demo.metier.rest,org.glassfish.jersey.jackson,com.wordnik.swagger.jaxrs.json,fr.demo.metier.rest.core.provider
      </param-value>
    </init-param>
    <init-param>
      <param-name>jersey.config.server.provider.scanning.recursive</param-name>
      <param-value>true</param-value>
    </init-param>

    <init-param>
      <param-name>jersey.config.server.provider.classnames</param-name>
      <param-value>
        com.wordnik.swagger.jersey.listing.ApiListingResourceJSON,
        com.wordnik.swagger.jersey.listing.JerseyApiDeclarationProvider,
        com.wordnik.swagger.jersey.listing.JerseyResourceListingProvider,
        org.glassfish.jersey.media.multipart.MultiPartFeature
      </param-value>
    </init-param>
    <init-param>
      <param-name>jersey.config.server.wadl.disableWadl</param-name>
      <param-value>false</param-value>
    </init-param>
    <!-- -->
    <load-on-startup>1</load-on-startup>
  </servlet>

  <servlet-mapping>
    <servlet-name>jersey-servlet</servlet-name>
    <url-pattern>/rest/*</url-pattern>
  </servlet-mapping>


  <!-- Swagger Servlet -->
  <!--<servlet>
    <servlet-name>JerseyJaxrsConfig</servlet-name>
    <servlet-class>com.wordnik.swagger.jersey.config.JerseyJaxrsConfig</servlet-class>
    <init-param>
      <param-name>api.version</param-name>
      <param-value>1.0.0</param-value>
    </init-param>
    <init-param>
      <param-name>swagger.api.basepath</param-name>
      <param-value>${jndi("swagger.api.basepath")}</param-value>
    </init-param>
    <load-on-startup>2</load-on-startup>
  </servlet>-->

  <servlet>
    <servlet-name>SwaggerConfigServlet</servlet-name>
    <servlet-class>fr.demo.metier.swagger.api.util.ConfigServlet</servlet-class>
    <load-on-startup>2</load-on-startup>
  </servlet>

  <!-- Accueil : Spring MVC -->

  <servlet>
    <servlet-name>AccueilServlet</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>/WEB-INF/spring/servlet-context.xml</param-value>
    </init-param>
    <load-on-startup>3</load-on-startup>
  </servlet>

  <servlet-mapping>
    <servlet-name>AccueilServlet</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>

</web-app>
